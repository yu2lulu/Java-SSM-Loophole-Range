(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{191:function(e,t,a){"use strict";a.r(t);var i=a(6),n=Object(i.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h2",{attrs:{id:"一、漏洞环境信息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一、漏洞环境信息"}},[e._v("#")]),e._v(" 一、漏洞环境信息")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("http://127.0.0.1:8080/fileread/read?file=1.txt\n")])])]),a("h4",{attrs:{id:"payload-http-127-0-0-1-8080-fileread-read-file-etc-pass"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#payload-http-127-0-0-1-8080-fileread-read-file-etc-pass"}},[e._v("#")]),e._v(" "),a("strong",[e._v("payload:")]),e._v(" http://127.0.0.1:8080/fileread/read?file=../../../../../../../../etc/pass")]),e._v(" "),a("p",[a("img",{attrs:{src:"/img/fileread_payload.jpg",alt:""}})]),e._v(" "),a("h2",{attrs:{id:"二、修复说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#二、修复说明"}},[e._v("#")]),e._v(" 二、修复说明")]),e._v(" "),a("p",[a("img",{attrs:{src:"/img/fileread_fenxi.jpg",alt:""}})]),e._v(" "),a("h4",{attrs:{id:"分析service层-fileread-string-filepath-添加修复代码前后分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分析service层-fileread-string-filepath-添加修复代码前后分析"}},[e._v("#")]),e._v(" "),a("strong",[e._v("分析service层 fileRead(String filePath) 添加修复代码前后分析")])]),e._v(" "),a("p",[a("strong",[e._v("文件读取核心代码")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('    @Override\n    public String fileRead(String filePath) {\n        //1.获取文件路径\n        String staticPath = ContextLoader.getCurrentWebApplicationContext().getServletContext().getRealPath("/static");\n\n        //安全检验\n        Boolean fileInDir = fileReadCheck.isFileInDir(filePath, new File(staticPath));\n        if (fileInDir==false){\n            return null;\n        }\n\n        //2.得到需读取的文件完整路径\n        File filepath = new File(staticPath+File.separator+filePath);\n\n        //3.判断文件是否存在\n        if(filepath.isFile()==false){\n            return null; //表示不存在该文件,直接返回空\n        }\n\n        //3.读取文件内容并返回\n        String sb = null;\n        try {\n            sb = readAction(filepath); //读取文件代码\n        } catch (IOException e) {\n            e.printStackTrace();\n        }\n        return sb;\n    }\n\n    @Override\n    public String readAction(File file) throws IOException {\n        略.\n    }\n')])])]),a("p",[a("strong",[e._v("文件读取校验代码")])]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("/*\n任意文件读取过滤函数\n* */\npublic class fileReadCheck {\n    //判断字符串格式的文件名是否在目录中存在\n    static public Boolean isFileInDir(String fileName, File dir){\n        if(dir.isDirectory()==false){\n            return false;\n        }\n        //1。获取目录下的所有文件名\n        File[] files = dir.listFiles();\n\n        for (int i = 0; i < files.length; i++) {\n            if (fileName.equals(files[i].getName())){ //如果需要读取的目录中存在和读取的文件名相同则返回true\n                return true;\n            }\n        }\n        return false; //没有找到目标相同的文件名,返回false\n    }\n}\n")])])]),a("p",[a("strong",[e._v("修复说明")])]),e._v(" "),a("ul",[a("li",[e._v("获取需要读取文件的目录下的所有文件名;")]),e._v(" "),a("li",[e._v("比对目录下所有文件名和需要读取的文件名")]),e._v(" "),a("li",[e._v("若有相同的文件名,读取 否->拒绝读取操作")])]),e._v(" "),a("h2",{attrs:{id:"三、小结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三、小结"}},[e._v("#")]),e._v(" 三、小结")]),e._v(" "),a("ul",[a("li",[e._v("成因：输入未校验")]),e._v(" "),a("li",[e._v("位置：Service层")]),e._v(" "),a("li",[e._v("修复：ESAPI编码/逻辑处理修复\n"),a("ul",[a("li",[e._v("ESAPI分析：正常的文件名称由字母数字组成，另外上传的合法文件应由系统重新生成唯一的id去命名，因此可以粗暴的使用ESAPI的encodeForOS编码处理")]),e._v(" "),a("li",[e._v("逻辑修复分析：filePath变量无论是否带有路径穿越的路径信息，对于系统来说都只是一个字符串,可以在需要读取的目录中去比对文件名是否一致来处理，从而限制了目录穿越带来的文件读取操作")])])])])])}),[],!1,null,null,null);t.default=n.exports}}]);